#!/usr/bin/env bash
set -e
set -o pipefail

server=$2
install_flag=""
remove_flag=""
force_flag=""
debug_flag=""

print_usage() {
	echo
	echo "NAME"
	echo
	echo "	wp-cli-install"
	echo
	echo "DESCRIPTION"
	echo
	echo "	Install, Remove, Force Install and Debug WP-CLI installation over SSH."
	echo "	Server name can be in the form of user@domain or an alias from ~/.ssh/config"
	echo
	echo "SYNOPSYS"
	echo
	echo "	wp-cli-install <flag(s)> <server>"
	echo
	echo "FLAGS:"
	echo "	-i	Install WP-CLI"
	echo "	-r	Remove WP-CLI and cleanup"
	echo "	-f	Force install when WP-CLI is already installed"
	echo "	-d	Debug script"
	echo
	exit 1
}

while getopts 'irfd' flag; do
	case "${flag}" in
		i) install_flag="true" ;;
		r) remove_flag="true" ;;
		f) force_flag="true" ;;
		d) debug_flag="true" ;;
		*) print_usage ;;
	esac
done

[[ -z "$2" ]] || [[ ! "$1" =~ -. ]] && echo "This command must be followed by an option flag, then server name!" && print_usage

[[ $debug_flag ]] && set -x

if [[ "$remove_flag" == "true" ]]; then
	ssh $server '
	echo "Removing WP-CLI"
	sudo rm -rf /usr/local/bin/wp $HOME/.wp-cli
	sed -i "/#WP-CLI-Install/d" $HOME/.bash_profile
	exit 1
	'
fi

# If WP-CLI is not installed and user is not "root"
if [[ "$install_flag" == "true" && "$EUID" -ne 0 ]]; then
	ssh -T $server "bash -s $force_flag" <<EOF
	[[ -z "$force_flag" ]] && [[ -n "$(command -v wp)" ]] && echo "WP-CLI is already installed! Use -f flag to force." && exit 1
	echo "Installing WP-CLI"
	mkdir -p ~/.wp-cli
	cd ~/.wp-cli

	curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
	chmod +x wp-cli.phar
	sudo mv wp-cli.phar /usr/local/bin/wp

	curl -O https://raw.githubusercontent.com/wp-cli/wp-cli/master/utils/wp-completion.bash
	echo "source ~/.wp-cli/wp-completion.bash #WP-CLI-Install" >> ~/.bash_profile
	. ~/.bash_profile
EOF
fi

exit 1
